<library path="lib/libl3_terrain_model_generator">

  <!-- Misc -->

  <class name="sensor_pose_subscriber" type="l3_terrain_modeling::SensorPoseSubscriber" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Plugin that forwards a subsribed position as sensor pose.
    </description>
  </class>

  <!-- Sensor plugins -->

  <class name="generic_lidar_sensor" type="l3_terrain_modeling::GenericLidarSensor" base_class_type="l3_terrain_modeling::SensorPlugin">
    <description>
      A generic lidar sensor handler.
    </description>
  </class>
  <class name="generic_rgbd_sensor" type="l3_terrain_modeling::GenericRGBDSensor" base_class_type="l3_terrain_modeling::SensorPlugin">
    <description>
      A generic RGBD sensor handler.
    </description>
  </class>
  <class name="grid_map_sensor" type="l3_terrain_modeling::GridMapSensor" base_class_type="l3_terrain_modeling::SensorPlugin">
    <description>
      A pseudo sensor faking data based on input grid map.
    </description>
  </class>
  <class name="image_map_sensor" type="l3_terrain_modeling::ImageMapSensor" base_class_type="l3_terrain_modeling::SensorPlugin">
    <description>
      A pseudo sensor faking data based on greyscaled images.
    </description>
  </class>

  <!-- Filter plugins -->

  <class name="grid_map_crop_filter" type="l3_terrain_modeling::GridMapCropFilter" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Crops the input grid map based on given limits.
    </description>
  </class>

  <class name="pcl_mls_smooth_filter" type="l3_terrain_modeling::PclMlsSmoothFilter" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Smoothes the pointcloud based on the neighboring data within a given radius.
    </description>
  </class>

  <class name="pcl_pass_through_box_filter" type="l3_terrain_modeling::PclPassThroughBoxFilter" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Filters a pointcloud based on simple box limits.
    </description>
  </class>

  <class name="pcl_pass_through_ellipse_filter" type="l3_terrain_modeling::PclPassThroughEllipseFilter" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Filters a pointcloud in xy-plane based on elliptical shape.
    </description>
  </class>

  <class name="pcl_statistical_outlier_filter" type="l3_terrain_modeling::PclStatisticalOutlierFilter" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Removes outliers based on statistical data of the neighborhood.
    </description>
  </class>

  <class name="pcl_voxel_grid_filter" type="l3_terrain_modeling::PclVoxelGrridFilter" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Downsamples the pointcloud based on a fixed voxel grid.
    </description>
  </class>

  <!-- Generator plugins -->

  <class name="copy_map_layer_generator" type="l3_terrain_modeling::CopyMapLayerGenerator" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Copies over a layer to another layer within a grid map.
    </description>
  </class>

  <class name="elevation_map_generator" type="l3_terrain_modeling::ElevationMapGenerator" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Generates a elevation map based on input point cloud.
    </description>
  </class>

  <class name="grid_map_pose_updater" type="l3_terrain_modeling::GridMapPoseUpdater" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Updates the pose of the grid map. Hereby, the map is also shifted accordingly.
    </description>
  </class>

  <class name="normals_cloud_generator" type="l3_terrain_modeling::NormalsCloudGenerator" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Generates a surface normals using PCA based on input point cloud.
    </description>
  </class>

  <class name="occupancy_map_generator" type="l3_terrain_modeling::OccupancyMapGenerator" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Generates occupancy grid map based on elevation map.
    </description>
  </class>

  <class name="octree_generator" type="l3_terrain_modeling::OctreeGenerator" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Generates octree based on aggregated point cloud data.
    </description>
  </class>

  <class name="surface_mesh_generator" type="l3_terrain_modeling::SurfaceMeshGenerator" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Surface reconstruction based on aggregated point cloud data.
    </description>
  </class>

  <!-- Legacy Generator plugins; Not guaranteed to work! -->

  <class name="edges_cloud_generator" type="l3_terrain_modeling::EdgesCloudGenerator" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Detects edges in a point cloud and outputs a Pointcloud&ltPointXYZI&gt where the intensity represents the value if a point belons to an edge.
    </description>
  </class>

  <class name="gradients_cloud_generator" type="l3_terrain_modeling::GradientsCloudGenerator" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Computes gradients in a point cloud and outputs a Pointcloud&ltPointXYZI&gt where the intensity represents gradient.
    </description>
  </class>

  <class name="ground_level_map_generator" type="l3_terrain_modeling::GroundLevelMapGenerator" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Generates ground level occupancy grid map.
    </description>
  </class>

  <!-- Publisher plugins -->

  <class name="grid_map_publisher" type="l3_terrain_modeling::GridMapPublisher" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      A generic grid_map publisher.
    </description>
  </class>

  <class name="normals_publisher" type="l3_terrain_modeling::NormalsPublisher" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      The NormalsPublisher publishes normals data provided by a PointNormalCloud.
    </description>
  </class>

  <class name="occupancy_map_publisher" type="l3_terrain_modeling::OccupancyMapPublisher" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      A generic nav_msgs::OccupancyGrid publisher.
    </description>
  </class>

  <class name="octree_publisher" type="l3_terrain_modeling::OctreePublisher" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      The OctreePublisher publishes octree data in a viusal format.
    </description>
  </class>

  <class name="point_cloud_publisher" type="l3_terrain_modeling::PointCloudPublisher" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      A generic Pointcloud publisher. Supports Pointclouds consisting of PointXYZ, PointXYZI, PointXYZRGB and PointNormal.
    </description>
  </class>

  <class name="surface_mesh_publisher" type="l3_terrain_modeling::SurfaceMeshPublisher" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Publishes surface mesh reconstruction data provided by the SurfaceMeshGenerator.
    </description>
  </class>

  <class name="terrain_model_publisher" type="l3_terrain_modeling::TerrainModelPublisher" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Publishes terrain model as used by the footstep planner.
    </description>
  </class>

  <!-- Other plugins -->

  <class name="periodic_process" type="l3_terrain_modeling::PeriodicProcess" base_class_type="l3_terrain_modeling::ProcessorPlugin">
    <description>
      Triggers a process chain in a fixed frequency.
    </description>
  </class>

</library>
